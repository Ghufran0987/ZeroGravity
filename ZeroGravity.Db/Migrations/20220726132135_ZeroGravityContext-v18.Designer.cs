// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZeroGravity.Db.DbContext;

namespace ZeroGravity.Db.Migrations
{
    [DbContext(typeof(ZeroGravityContext))]
    [Migration("20220726132135_ZeroGravityContext-v18")]
    partial class ZeroGravityContextv18
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZeroGravity.Db.Models.ActivityData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityIntensityType")
                        .HasColumnType("int");

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("IntegrationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SyncId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.AnswerOptionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOptionData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.CoachingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachingType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CoachingData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoachingType = 0
                        },
                        new
                        {
                            Id = 2,
                            CoachingType = 1
                        },
                        new
                        {
                            Id = 3,
                            CoachingType = 2
                        });
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.DietPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("BreakfastTime")
                        .HasColumnType("time");

                    b.Property<int>("DietType")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("DinnerTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("LunchTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("DietPreference");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.EducationalInfoData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationalInfoData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.FastingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FastingData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.FastingSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IncludeFridays")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeMondays")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeSundays")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeThursdays")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeTuesdays")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeWednesdays")
                        .HasColumnType("bit");

                    b.Property<bool>("Includesaturdays")
                        .HasColumnType("bit");

                    b.Property<bool>("SkipBreakfast")
                        .HasColumnType("bit");

                    b.Property<bool>("SkipDinner")
                        .HasColumnType("bit");

                    b.Property<bool>("SkipLunch")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FastingSetting");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.GlucoseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Glucose")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("GlucoseData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.IntegrationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntegrationType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegrationData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IntegrationType = 0,
                            Name = "Nemaura Sugarbeat"
                        },
                        new
                        {
                            Id = 2,
                            IntegrationType = 1,
                            Name = "Fitbit"
                        });
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.LinkedIntegration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("IntegrationId")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LinkedIntegration");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.LiquidIntake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("AmountMl")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("LiquidType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LiquidIntake");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealSlotType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MealData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("MealDataId")
                        .HasColumnType("int");

                    b.Property<string>("MealIngredientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MealDataId");

                    b.ToTable("MealIngredientsBase");

                    b.HasDiscriminator<string>("MealIngredientType").HasValue("MealIngredientsBase");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MedicalCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("DiabetesType")
                        .HasColumnType("int");

                    b.Property<bool>("DontWantToSayNow")
                        .HasColumnType("bit");

                    b.Property<bool>("HasArthritis")
                        .HasColumnType("bit");

                    b.Property<bool>("HasCardiacCondition")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDiabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHypertension")
                        .HasColumnType("bit");

                    b.Property<bool>("Others")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MedicalCondition");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MeditationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("MeditationData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderType")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("HipDiameter")
                        .HasColumnType("float");

                    b.Property<double>("NeckDiameter")
                        .HasColumnType("float");

                    b.Property<int>("Salutation")
                        .HasColumnType("int");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WaistDiameter")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonalData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.PersonalGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("ActivityDuration")
                        .HasColumnType("float");

                    b.Property<double>("BodyFat")
                        .HasColumnType("float");

                    b.Property<double>("BodyMassIndex")
                        .HasColumnType("float");

                    b.Property<int>("BreakfastAmount")
                        .HasColumnType("int");

                    b.Property<double>("CalorieDrinkAlcoholConsumption")
                        .HasColumnType("float");

                    b.Property<int>("DinnerAmount")
                        .HasColumnType("int");

                    b.Property<double>("FastingDuration")
                        .HasColumnType("float");

                    b.Property<int>("HealthySnackAmount")
                        .HasColumnType("int");

                    b.Property<int>("LunchAmount")
                        .HasColumnType("int");

                    b.Property<double>("MeditationDuration")
                        .HasColumnType("float");

                    b.Property<int>("UnhealthySnackAmount")
                        .HasColumnType("int");

                    b.Property<double>("WaterConsumption")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PersonalGoal");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.QuestionAndAnswerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalDataId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Tag1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("PersonalDataId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAndAnswerData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.QuestionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerDataType")
                        .HasColumnType("int");

                    b.Property<string>("BackgroundImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataFieldType")
                        .HasColumnType("int");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Number")
                        .HasColumnType("float");

                    b.Property<bool>("ShowInOnbaording")
                        .HasColumnType("bit");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Template")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuestionData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.StepCountData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("StepCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StepCountData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatAlertData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double?>("BatteryVoltage")
                        .HasColumnType("float");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CriticalCode")
                        .HasColumnType("int");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransmitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SugarBeatAlertData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatDataBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlucoseDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GlucoseDataId");

                    b.ToTable("SugarBeatDataBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SugarBeatDataBase");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatEatingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MetabolicScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SugarBeatEatingSession");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatGlucoseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double?>("BatteryVoltage")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GlucoseValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsSensorWarmedUp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSessionFirstValue")
                        .HasColumnType("bit");

                    b.Property<double>("SensorValue")
                        .HasColumnType("float");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("TransmitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("SugarBeatGlucoseData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatSessionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double?>("BatteryVoltage")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndAlertId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartAlertId")
                        .HasColumnType("int");

                    b.Property<string>("TransmitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EndAlertId");

                    b.HasIndex("StartAlertId");

                    b.ToTable("SugarBeatSessionData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatSettingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double?>("BatteryVoltage")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSyncedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransmitterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SugarBeatSettingData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.Users.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<bool>("CompletedFirstUseWizard")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateTimeDisplayType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnBoardingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitDisplayType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WantsNewsletter")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptTerms = true,
                            CompletedFirstUseWizard = false,
                            Created = new DateTime(2022, 7, 26, 14, 21, 34, 777, DateTimeKind.Local).AddTicks(496),
                            DateTimeDisplayType = 0,
                            Email = "info@prestine.in",
                            FirstName = "Application",
                            LastName = "Admin",
                            PasswordHash = "$2a$11$wum5EuayAaOeY2oO1wgLpeD2kpvHZbMUaFxlH1DLL446LkMeWyzMi",
                            Role = 0,
                            UnitDisplayType = 0,
                            Verified = new DateTime(2022, 7, 26, 14, 21, 34, 777, DateTimeKind.Local).AddTicks(1114),
                            WantsNewsletter = false
                        },
                        new
                        {
                            Id = 1000,
                            AcceptTerms = true,
                            CompletedFirstUseWizard = true,
                            Created = new DateTime(2022, 7, 26, 14, 21, 34, 777, DateTimeKind.Local).AddTicks(9600),
                            DateTimeDisplayType = 1,
                            Email = "apple@apple.com",
                            FirstName = "Apple",
                            LastName = "Inc",
                            PasswordHash = "$2a$11$SlEV2Nm/D8C54a2PjTerI.5zar4rbe1iiajc8YHWL4KC1CHCGnkt6",
                            Role = 1,
                            UnitDisplayType = 1,
                            Verified = new DateTime(2022, 7, 26, 14, 21, 34, 777, DateTimeKind.Local).AddTicks(9865),
                            WantsNewsletter = false
                        },
                        new
                        {
                            Id = 999,
                            AcceptTerms = true,
                            CompletedFirstUseWizard = true,
                            Created = new DateTime(2022, 7, 26, 14, 21, 34, 778, DateTimeKind.Local).AddTicks(235),
                            DateTimeDisplayType = 1,
                            Email = "google@google.com",
                            FirstName = "Google",
                            LastName = "LLC",
                            PasswordHash = "$2a$11$yMMXOJg7IR0mR3c2XUtOg.OMtf6/uzalLtneQdbCCsD5QDTWai.j.",
                            Role = 1,
                            UnitDisplayType = 1,
                            Verified = new DateTime(2022, 7, 26, 14, 21, 34, 778, DateTimeKind.Local).AddTicks(255),
                            WantsNewsletter = false
                        });
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.WeightData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WeightTrackerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeightTrackerId");

                    b.ToTable("WeightData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.WeightTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TargetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("WeightTracker");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.WellbeingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WellbeingData");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.Dairy", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase");

                    b.HasDiscriminator().HasValue("Dairy");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.Fruits", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase");

                    b.HasDiscriminator().HasValue("Fruits");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.Grains", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase");

                    b.HasDiscriminator().HasValue("Grains");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.Protein", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase");

                    b.HasDiscriminator().HasValue("Protein");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.Vegetables", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase");

                    b.HasDiscriminator().HasValue("Vegetables");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.BatteryLife", b =>
                {
                    b.HasBaseType("ZeroGravity.Db.Models.SugarBeatData.SugarBeatDataBase");

                    b.HasDiscriminator().HasValue("BatteryLife");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.AnswerOptionData", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.QuestionData", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.MealIngredients.MealIngredientsBase", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.MealData", "MealData")
                        .WithMany("Ingredients")
                        .HasForeignKey("MealDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.QuestionAndAnswerData", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.AnswerOptionData", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeroGravity.Db.Models.PersonalData", "PersonalData")
                        .WithMany("QuestionAndAnswers")
                        .HasForeignKey("PersonalDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZeroGravity.Db.Models.QuestionData", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatDataBase", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.GlucoseData", "GlucoseData")
                        .WithMany("SugarBeatData")
                        .HasForeignKey("GlucoseDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatGlucoseData", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.SugarBeatData.SugarBeatSessionData", "Session")
                        .WithMany("GlucoseDatas")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.SugarBeatData.SugarBeatSessionData", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.SugarBeatData.SugarBeatAlertData", "EndAlert")
                        .WithMany()
                        .HasForeignKey("EndAlertId");

                    b.HasOne("ZeroGravity.Db.Models.SugarBeatData.SugarBeatAlertData", "StartAlert")
                        .WithMany()
                        .HasForeignKey("StartAlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.Users.Account", b =>
                {
                    b.OwnsMany("ZeroGravity.Db.Models.Users.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("AccountId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("AccountId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("Account")
                                .HasForeignKey("AccountId");
                        });
                });

            modelBuilder.Entity("ZeroGravity.Db.Models.WeightData", b =>
                {
                    b.HasOne("ZeroGravity.Db.Models.WeightTracker", "WeightTracker")
                        .WithMany("Weights")
                        .HasForeignKey("WeightTrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
